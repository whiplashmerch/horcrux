import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import './Tabview.css';

/*
Example data for tabs prop:

[
  { id: 0, name: 'all', view: <AllOrders /> },
  { id: 1, name: 'processing', view: <ProcessingOrders /> },
  { id: 2, name: 'shipped', view: <ShippedOrders /> },
  { id: 3, name: 'paused', view: null },
  { id: 4, name: 'cancelled', view: null }
];
*/


export default class Tabview extends Component {
  static propTypes = {
    tabs: PropTypes.array
  }

  static defaultProps = {
    tabs: []
  }

  state = {
    activeTab: 0
  }

  componentWillReceiveProps({ tabs }) {
    let { hash } = window.location;
    if (hash) {
      hash = hash.split('#')[1];
      // get index of hash if it exists
      const index = tabs.map(tab => tab.name).indexOf(hash);
      if (index >= 0) {
        return this.setState({ activeTab: index });
      }
    }
  }

  // PRIVATE

  _getActiveView = () => {
    const { activeTab } = this.state;
    const { tabs } = this.props;
    let activeTabData = null;

    if (!!!tabs.length) {
      return null;
    }

    activeTabData = tabs.find(item => (
      item.id === activeTab
    ));

    return activeTabData.view;
  }

  _getTabs = () => {
    const { activeTab } = this.state;
    const { tabs } = this.props;
    let tabClass = null;

    return tabs.map(tab => {
      tabClass = classnames('Tabview-link', { active: tab.id === activeTab });
      const ts = (new Date).getTime();
      return(
        <li
          key={ `${ ts }-${ tab.id }` }
          className="Tabview-li"
        >
          <a
            className={ tabClass }
            onClick={() => this._updateView(tab.id)}
          >
            { tab.name }
          </a>
        </li>
      )
    });
  }

  _updateView = (tabId) => {
    const { activeTab } = this.state;
    const { tabs } = this.props;

    if (tabId === activeTab) {
      return;
    }

    this.setState({ activeTab: tabId });
    window.location.hash = `#${ tabs[tabId].name }`;
  }


  render() {
    const { activeTab } = this.state;
    const tabs = this._getTabs();
    const ActiveView = this._getActiveView();

    const barStyle = {
      transform: `translate3d(${ 126 * activeTab }px, 0, 0)`
    };

    return(
      <div className="Tabview">
        <header className="Tabview-header">
          <ul className="Tabview-list">
            { tabs }
            <li className="Tabview-bar" style={ barStyle } />
          </ul>
        </header>

        <div className="Tabview-view">
          { ActiveView }
        </div>
      </div>
    );
  }
}
